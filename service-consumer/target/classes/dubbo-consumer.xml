<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://dubbo.apache.org/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://dubbo.apache.org/schema/dubbo
        http://dubbo.apache.org/schema/dubbo/dubbo.xsd">

    <!-- 消费方应用名，用于计算依赖关系，不是匹配条件，不要与提供方一样 -->
    <dubbo:application name="service-consumer">
        <!--qos是dubbo在线运维命令-->
        <!--是否启动Qos，默认是true-->
        <dubbo:parameter key="qos.enable" value="true" />
        <!--启动Qos绑定的端口，默认22222-->
        <dubbo:parameter key="qos.port" value="33333" />
        <!--是否允许远程访问，默认是false-->
        <dubbo:parameter key="qos.accept.foreign.ip" value="false" />
    </dubbo:application>

    <!--不需要配置协议，消费方是被动接受协议-->

    <!--
        check   启动检查，true：检测到某接口没有提供者时，抛异常，阻止系统启动，可能会出现循环依赖导致报错
        cluster 集群容错配置
        loadbalance  负载均衡配置
            Random      按权重随机, 根据weight值（服务方设置）来随机
            RoundRobin  轮询
            LeastActive 最少活跃数
    -->
    <dubbo:consumer check="false" cluster="failover" retries="2" forks="2" loadbalance="random" />

    <!-- 使用zookeeper广播注册中心暴露发现服务地址 -->
    <dubbo:registry address="zookeeper://127.0.0.1:2181" />

    <!-- 生成远程服务代理，可以和本地bean一样使用demoService
         cache  声明式缓存
            lru ：基于最近最少使用原则删除多余缓存
            threadlocal ：当前线程缓存
    -->
    <dubbo:reference id="helloService" interface="com.dongzhic.service.HelloService" cache="lru" timeout="4000" />

    <!--启动时不检查-->
    <!--<dubbo:reference id="orderService" interface="com.enjoy.service.OrderService"-->
    <!--loadbalance="roundrobin" timeout="1000" version="1.0"/>-->
    <dubbo:reference id="orderService2" interface="com.dongzhic.service.OrderService" />
    <!--check="false" -->
    <!--retries="2" cluster="failover"-->
    <!--loadbalance="roundrobin"-->
    <!--cache="lru"-->
    <!--group="group2"-->
    <!--version="1.0"-->

    <!--异步调用-->
    <dubbo:reference  id="userService" interface="com.dongzhic.service.UserService" >
        <dubbo:method name="getDetail" async="true" />
    </dubbo:reference>
    <dubbo:reference  id="payService" interface="com.dongzhic.service.PayService" >
        <dubbo:method name="pay" async="true" />
    </dubbo:reference>

    <!--回调-->
    <dubbo:reference  id="errorService" interface="com.dongzhic.service.ErrorService" >
        <dubbo:method name="doSomeThing"
                      onreturn="callBack.onSuccess" onthrow="callBack.onError"/>
    </dubbo:reference>
</beans>